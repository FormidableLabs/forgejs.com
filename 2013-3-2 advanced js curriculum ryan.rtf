{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\fs24 \cf0 \
\
\
\
\
tonight: \
\
all the concepts come through in the lightbox - learn, explore, conceptualize, use\
\
then we build something with them - apply. need a small app by the end?\
\
\
\
\
friday night\
conceptual overview \
\
\
Saturday morning first thing, they clone git repo\
vimeo project\
make request to vimeo for every channel, that builds nav structure \
walk through getting all categories, and have the categories build the navigation stack. now drill down, get most recent videos for this category\'85 \
get into tying data structures more deeply? get whatever video they are in and tie it to a category, build a data structure\
cache layer, manipulate data layers, walk over them\
\
unit testing - write tests before or write them afterwards - we'll write tests afterwards\'85 hack unit tests onto end git rep that is created. \
\
event driven architecture\
create a custom event that maps to the rest of the app - start a video stop everything else, start the video again resume everything else. \
\
\
\
the ideal project will allow people some flexibility in the direction they go, while making sure the core concepts is common to everyone \
\
vimeo \
\
data structure - working with data - concepts son\
\
presentation is not the issue\'85 project includes bootstrap template to reduce complexity on front end design\
\
local storage - viewing video size, client side data storage \
\
focus on metadata of videos, except the channels as the navigational structure, relatable\'85 each channel has a video, nested data client side \
\
git repository for start and end point - decent layout\'85 push it aside from the beginning\
\
\
\
tuesday at the latest for ryan building out project\
\
\
express server component\
\
\
\
\
}